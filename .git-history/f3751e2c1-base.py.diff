diff --git a/nols_website/nols_cms/settings/base.py b/nols_website/nols_cms/settings/base.py
index 2d701b6bd..cf8017735 100644
--- a/nols_website/nols_cms/settings/base.py
+++ b/nols_website/nols_cms/settings/base.py
@@ -1,497 +1,497 @@
 import os
 
 DEBUG = False
 FILER_DEBUG = DEBUG
 
 NOLS_WEB_HOST = "testweb.nols.edu"
 NEXUS_HOST = "nexusclone.nols.edu"
-API_HOST = "api.dev.nols.edu"
+API_HOST = "apidev.nols.edu"
 API_USER = "t"
 API_PASSWORD = "ttt"
 
 
 def gettext(s):
     return s
 
 
 DATABASES = {
     'default': {
         'ENGINE': 'django.db.backends.postgresql_psycopg2',
         'HOST': '127.0.0.1',
         'NAME': 'nols_cms_db',
         'USER': 'nols',
         'PASSWORD': 'n0ls3cr3t',
         'PORT': '5432',
     }
 }
 
 # Build paths inside the project like this: os.path.join(BASE_DIR, ...)
 BASE_DIR = os.path.dirname(os.path.dirname(__file__))
 
 # Repo root
 ROOT_DIR = os.path.join(BASE_DIR, os.pardir, os.pardir)
 
 # SECURITY WARNING: keep the secret key used in production secret!
 SECRET_KEY = '=3x!$%2s_5jht5=i-j#9-bfpcup0sn*2&_nelyoql&+0p5itgs'
 
 ALLOWED_HOSTS = [".nols.edu", ".dev.nols.edu"]
 
 # Application definition
 ROOT_URLCONF = 'nols_cms.urls'
 WSGI_APPLICATION = 'nols_cms.wsgi.application'
 
 # Internationalization
 # https://docs.djangoproject.com/en/1.8/topics/i18n/
 
 LANGUAGE_CODE = 'en'
 TIME_ZONE = 'America/Denver'
 USE_I18N = True
 USE_L10N = True
 USE_TZ = True
 
 # Static files (CSS, JavaScript, Images)
 # https://docs.djangoproject.com/en/1.8/howto/static-files/
 STATIC_URL = '/static/'
 MEDIA_URL = '/media/'
 VENV_DIR = os.path.dirname(
     os.path.dirname(
         os.path.dirname(
             os.path.dirname(
                 os.path.dirname(__file__)))))
 STATIC_ROOT = os.path.join(VENV_DIR, "static")
 MEDIA_ROOT = os.path.join(os.path.dirname(os.path.dirname(VENV_DIR)), "media")
 
 STATICFILES_STORAGE = 'django.contrib.staticfiles.storage.ManifestStaticFilesStorage'
 STATICFILES_DIRS = (
     os.path.join(ROOT_DIR, 'build'),
     os.path.join(BASE_DIR, 'static'),
     # Import owl.video.play.png image, to static/css/owl.video.play.png
     # because owl.carousel2/src/scss/_video.scss assumes that owl.carousel.css
     # and owl.video.play.png will be in the same dir but in our project
     # owl.carousel.css gets put in css/screen.css.
     ('css', os.path.join(ROOT_DIR, 'node_modules/owl.carousel2/src/img')),
     (os.path.join(ROOT_DIR, 'node_modules/lightgallery/dist')),
     ('css/images', os.path.join(ROOT_DIR, 'node_modules/leaflet/dist/images')),
     ('js', os.path.join(ROOT_DIR, 'node_modules/jquery.cookie')),
 )
 
 SITE_ID = 1
 
 STATICFILES_FINDERS = [
     'django.contrib.staticfiles.finders.FileSystemFinder',
     'django.contrib.staticfiles.finders.AppDirectoriesFinder',
 ]
 
 TEMPLATES = [
     {
         'BACKEND': 'django.template.backends.django.DjangoTemplates',
         'DIRS': [
              os.path.join(BASE_DIR, 'templates'),
         ],
         'OPTIONS': {
             'debug': DEBUG,
             'context_processors': [
                 'django.contrib.auth.context_processors.auth',
                 'django.contrib.messages.context_processors.messages',
                 'django.template.context_processors.i18n',
                 'django.template.context_processors.debug',
                 'django.template.context_processors.request',
                 'django.template.context_processors.media',
                 'django.template.context_processors.csrf',
                 'django.template.context_processors.tz',
                 'sekizai.context_processors.sekizai',
                 'django.template.context_processors.static',
                 'cms.context_processors.cms_settings',
                 'courses.context_processors.back_to_search',
                 'common_utils.context_processors.current_site',
             ],
             'loaders': [
                 ('django.template.loaders.cached.Loader', [
                     'django.template.loaders.filesystem.Loader',
                     'django.template.loaders.app_directories.Loader',
                 ]),
             ]
         },
     },
 ]
 
 MIDDLEWARE_CLASSES = (
     'django.middleware.cache.UpdateCacheMiddleware',
     'cms.middleware.utils.ApphookReloadMiddleware',
     'django.contrib.sessions.middleware.SessionMiddleware',
     'django.middleware.csrf.CsrfViewMiddleware',
     'django.contrib.auth.middleware.AuthenticationMiddleware',
     'django.contrib.messages.middleware.MessageMiddleware',
     'django.middleware.locale.LocaleMiddleware',
     'django.middleware.common.CommonMiddleware',
     'django.middleware.clickjacking.XFrameOptionsMiddleware',
     'cms.middleware.user.CurrentUserMiddleware',
     'cms.middleware.page.CurrentPageMiddleware',
     'cms.middleware.toolbar.ToolbarMiddleware',
     'cms.middleware.language.LanguageCookieMiddleware',
     'django.middleware.cache.FetchFromCacheMiddleware',
 )
 
 INSTALLED_APPS = (
     'djangocms_admin_style',
     'django.contrib.auth',
     'django.contrib.contenttypes',
     'django.contrib.sessions',
     'django.contrib.admin',
     'django.contrib.humanize',
     'django.contrib.sites',
     'django.contrib.sitemaps',
     'django.contrib.staticfiles',
     'django.contrib.messages',
     'cms',
     'menus',
     'sekizai',
     'treebeard',
     'filer',
     'easy_thumbnails',
     'cmsplugin_filer_file',
     'cmsplugin_filer_folder',
     'cmsplugin_filer_link',
     'cmsplugin_filer_image',
     'cmsplugin_filer_teaser',
     'cmsplugin_filer_video',
     'djangocms_text_ckeditor',
     'djangocms_gmaps',
     'djangocms_snippet',
     'djangocms_video',
     'djangocms_history',
     'rest_framework',
     'mathfilters',
 
     'courses',
     'employee_directory',
     'redirects',
     'cms_extensions',
     'cms_menu',
     'cms_plugins',
     'cms_plugins.stage',
     'cms_plugins.jumbotron',
     'cms_plugins.button',
     'cms_plugins.emergency_banner',
     'cms_plugins.facebook_page',
     'cms_plugins.partners',
     'cms_plugins.testimonial',
     'cms_plugins.separator',
     'cms_plugins.list',
     'cms_plugins.content_block',
     'cms_plugins.text_block',
     'cms_plugins.teaser',
     'cms_plugins.skillbox',
     'cms_plugins.image',
     'cms_plugins.detail_chart',
     'cms_plugins.gmaps',
     # 'cms_plugins.course_comparison_chart',
     'cms_plugins.heading',
     'cms_plugins.tile_grid',
     'cms_plugins.locations',
     'cms_plugins.events',
     'cms_plugins.faqs',
     'cms_plugins.employees',
     'cms_plugins.video_block',
     'cms_plugins.pillars',
     'cms_tools',
 )
 
 LANGUAGES = (
     ('en', gettext('en')),
     ('es', gettext('es')),
 )
 
 # =============================================================================
 # Session
 # =============================================================================
 SESSION_ENGINE = "django.contrib.sessions.backends.cached_db"
 SESSION_CACHE_ALIAS = "default"
 # =============================================================================
 # DJANGOCMS & DJANGO-FILER
 # =============================================================================
 
 CMS_LANGUAGES = {
     'default': {
         'public': True,
         'hide_untranslated': False,
         'redirect_on_fallback': True,
     },
     1: [
         {
             'public': True,
             'code': 'en',
             'hide_untranslated': True,
             'name': gettext('en'),
             'redirect_on_fallback': True,
         },
         {
             'public': True,
             'code': 'es',
             'hide_untranslated': True,
             'name': gettext('es'),
             'redirect_on_fallback': True,
         },
     ],
 }
 
 CMS_TEMPLATES = (
     ('homepage.html', 'Homepage Page Template'),
     ('detail_page.html', 'Detail Page Template'),
     ('locations_landing_page.html', 'Locations Landing Page Template'),
     ('generic_page.html', 'Generic Template'),
 )
 
 
 CMS_PERMISSION = True
 
 CMS_TOOLBAR_ANONYMOUS_ON = False
 
 CMS_CACHE_PREFIX = "cms-"
 CMS_CACHE_DURATIONS = {
     'menus': 3600,
     'content': 600,
     'permissions': 3600,
 }
 CMS_PAGE_CACHE = True
 
 
 CMS_UNESCAPED_RENDER_MODEL_TAGS = False
 
 CMS_PAGE_WIZARD_CONTENT_PLACEHOLDER = 'content'
 
 FILER_ENABLE_LOGGING = True
 
 FILER_CANONICAL_URL = 'public/'
 
 # =============================================================================
 # Easy-thumbnails
 # =============================================================================
 THUMBNAIL_DEBUG = DEBUG
 THUMBNAIL_PROCESSORS = (
     'easy_thumbnails.processors.colorspace',
     'easy_thumbnails.processors.autocrop',
     'filer.thumbnail_processors.scale_and_crop_with_subject_location',
     'easy_thumbnails.processors.filters',
 )
 
 THUMBNAIL_ALIASES = {
     '': {
         'profile_thumb': {'size': (50, 50), 'crop': True},
         'profile_detail': {'size': (200, 200), 'crop': True},
     },
 }
 
 THUMBNAIL_BASEDIR = 'thumbnails'
 
 # =============================================================================
 # djangocms-snippet
 # =============================================================================
 DJANGOCMS_SNIPPET_SEARCH = True
 
 # =============================================================================
 # Courses specific
 # =============================================================================
 SPACE_AVAILABLE_THRESHOLD = 5
 
 # =============================================================================
 # Pagination
 # =============================================================================
 
 PAGINATE_BY = 20
 
 # =============================================================================
 # CACHE
 # =============================================================================
 SHORT_TTL = 60 * 10  # 10 min
 MIDDLE_TTL = 60 * 30  # 30 min
 LONG_TTL = 60 * 60  # 1 hour
 FOREVER_TTL = 60 * 60 * 24 * 7  # 7 days
 
 CACHES = {
     'default': {
         'BACKEND': 'django.core.cache.backends.dummy.DummyCache',
     }
 }
 
 # =============================================================================
 # Elasticsearch
 # =============================================================================
 ELASTICSEARCH_BACKEND = {
     "default": {'hosts': ['localhost:9200']},
 }
 
 
 LOGGING = {
     'version': 1,
     'disable_existing_loggers': False,
     'formatters': {
         'verbose': {
             'format': '%(asctime)s %(levelname)s %(module)s <::> %(message)s'
         },
         'simple': {
             'format': '%(levelname)s %(message)s'
         },
     },
     'filters': {
         'require_debug_true': {
             '()': 'django.utils.log.RequireDebugTrue',
         },
         'require_debug_false': {
             '()': 'django.utils.log.RequireDebugFalse',
         },
         'remove_redirect_not_found': {
             '()': 'nols_cms.filters.SkipRedirectsNotFoundFilter',
         },
     },
     # As entry points to logging system, we want the handlers to analyze all incoming log records
     # We will use the logging handlers to filter out messages at certain levels, leaving most log
     # records in the file-based logs but only emailing errors and above
     'loggers': {
         'django': {
             'handlers': ['mail_admins', 'logfile'],
             'level': 'INFO',
             'propagate': True,
         },
         'django.request': {
             'handlers': ['mail_admins', 'logfile'],
             'level': 'INFO',
             'propagate': False,
         },
         'django.db': {
             'handlers': ['null', 'logfile'],
             'level': 'INFO',
             'propagate': False,
         },
         'filer': {
             'handlers': ['mail_admins', 'logfile'],
             'level': 'INFO',
             'propagate': True,
         },
         'cms': {
             'handlers': ['mail_admins', 'logfile'],
             'level': 'INFO',
             'propagate': True,
         },
         'nols_cms': {
             'handlers': ['mail_admins', 'logfile'],
             'level': 'INFO',
             'propagate': True,
         },
         'courses': {
             'handlers': ['mail_admins', 'logfile'],
             'level': 'INFO',
             'propagate': True,
         },
         'redirects': {
             'handlers': ['mail_admins', 'logfile'],
             'level': 'INFO',
             'propagate': True,
         },
     },
     'handlers': {
         'null': {
             'level': 'DEBUG',
             'class': 'logging.NullHandler',
         },
         'console': {
             'level': 'DEBUG',
             'filters': ['require_debug_true', 'remove_redirect_not_found'],
             'class': 'logging.StreamHandler',
             'formatter': 'verbose',
         },
         'logfile': {
             'level': 'INFO',
             'filters': ['require_debug_false', 'remove_redirect_not_found'],
             'class': 'logging.FileHandler',
             'formatter': 'verbose',
             'filename': '/var/log/uwsgi/nols_cms_django.log',
         },
         'mail_admins': {
             'level': 'ERROR',
             'class': 'django.utils.log.AdminEmailHandler',
         }
     },
 }
 
 # ==============================================================================
 # Django-CMS
 # ==============================================================================
 
 detail_placeholder_conf = {
     'plugins': [
         'DetailStagePlugin',
         'MapStagePlugin',
     ],
 }
 
 CMS_PLACEHOLDER_CONF = {
     'hero_stage': {
         'plugins': [
             'HeroStagePlugin'
         ]
     },
     'stage_content': {
         'plugins': [
             'GenericStagePlugin',
             'ContentStagePlugin',
             'MapStagePlugin',
             # 'TileStagePlugin',
             'StageGroupPlugin',
             'FacebookPagePlugin',
         ],
     },
     'detail_stage_content': detail_placeholder_conf,
     'location_description': detail_placeholder_conf,
     'sponsor_description': detail_placeholder_conf,
     'skill_description': detail_placeholder_conf,
     'course_description': detail_placeholder_conf,
 }
 
 # Color choices used in various plugins for theme and image tint.
 # Related to `$palette` in `_config.scss`.
 
 DJANGOCMS_GMAPS_API_KEY = ''
 DJANGOCMS_GMAPS_CUSTOM_MARKERS_ENABLED = False
 
 COLOR_CHOICES = (
     ('mud', 'Mud'),
     ('sand', 'Sand'),
     ('light', 'Light'),
     ('forest', 'Forest'),
     ('rock', 'Rock'),
     ('sun', 'Sun'),
 )
 
 WRAPPING_CHOICES = (
     ('grid_10', 'Centered (10 grid)'),
     ('grid_12', 'Regular (12 grid)'),
     ('full', 'Full width (no grid)')
 )
 
 FONT_CHOICES = (
     ('sentinel-book', 'Sentinel Book'),
     ('sentinel-bold', 'Sentinel Bold'),
     ('sentinel-semibold', 'Sentinel SemiBold'),
     ('presurra-regular', 'Presurra Regular'),
     ('presurra-bold', 'presurra-bold'),
     ('stratum-black', 'Stratum Black'),
 )
 
 # ==============================================================================
 # Django Rest Framework (to feed data to online app (portal)
 # ==============================================================================
 
 REST_FRAMEWORK = {
     # Use hyperlinked styles by default.
     # Only used if the `serializer_class` attribute is not set on a view.
     'DEFAULT_MODEL_SERIALIZER_CLASS':
         'rest_framework.serializers.HyperlinkedModelSerializer',
 
     # Use Django's standard `django.contrib.auth` permissions,
     # or allow read-only access for unauthenticated users.
     'DEFAULT_PERMISSION_CLASSES': [
         'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly'
     ],
 
 }
