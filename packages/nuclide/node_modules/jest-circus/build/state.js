'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});
exports.addEventHandler = exports.dispatch = exports.setState = exports.getState = exports.ROOT_DESCRIBE_BLOCK_NAME = undefined;

var _utils = require('./utils');

var _event_handler = require('./event_handler');

var _event_handler2 = _interopRequireDefault(_event_handler);

var _format_node_assert_errors = require('./format_node_assert_errors');

var _format_node_assert_errors2 = _interopRequireDefault(
  _format_node_assert_errors
);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {default: obj};
}

/**
 * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 *  strict-local
 */

const eventHandlers = [
  _event_handler2.default,
  _format_node_assert_errors2.default
];

const ROOT_DESCRIBE_BLOCK_NAME = (exports.ROOT_DESCRIBE_BLOCK_NAME =
  'ROOT_DESCRIBE_BLOCK');
const STATE_SYM = Symbol('JEST_STATE_SYMBOL');

const ROOT_DESCRIBE_BLOCK = (0, _utils.makeDescribe)(ROOT_DESCRIBE_BLOCK_NAME);
const INITIAL_STATE = {
  currentDescribeBlock: ROOT_DESCRIBE_BLOCK,
  currentlyRunningTest: null,
  expand: undefined,
  hasFocusedTests: false, // whether .only has been used on any test/describe
  includeTestLocationInResult: false,
  parentProcess: null,
  rootDescribeBlock: ROOT_DESCRIBE_BLOCK,
  testNamePattern: null,
  testTimeout: 5000,
  unhandledErrors: []
};

global[STATE_SYM] = INITIAL_STATE;

const getState = (exports.getState = () => global[STATE_SYM]);
const setState = (exports.setState = state => (global[STATE_SYM] = state));

const dispatch = (exports.dispatch = event => {
  for (const handler of eventHandlers) {
    handler(event, getState());
  }
});

const addEventHandler = (exports.addEventHandler = handler => {
  eventHandlers.push(handler);
});
