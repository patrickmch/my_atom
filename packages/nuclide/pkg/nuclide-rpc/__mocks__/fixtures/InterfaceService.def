export class Vector2 {
  constructor(x: number, y?: number) {}
  static distance(a: Vector2, b: Vector2): Promise<number> {}
  len(): Promise<number> {}

  watchChanges(): ConnectableObservable<number> {}

  // Private members do NOT require marshallable signatures.
  _privateMember(): number {}

  dispose(): void {}
}

export function getCurrentDirection(): Promise<Vector2> {}


// RPC definition files should ignore all non-export statements

'use strict';
while(true) {}
var x = 5;
const x = 42;

// exported variables are not part of the RPC definition
export var y;

// as are non-exported functions
function f() {}

export interface Iface {
  p(a: number): Promise<number>;
  f(): void;
  o(): ConnectableObservable<string>;

  dispose(): void;
}
