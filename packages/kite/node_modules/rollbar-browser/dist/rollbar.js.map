{"version":3,"sources":["webpack:///webpack/bootstrap 325d7ee092994c0182de","webpack:///./src/bundles/rollbar.js","webpack:///./src/globalnotifier.js","webpack:///./src/notifier.js","webpack:///./~/extend/index.js","webpack:///./src/error_parser.js","webpack:///./~/error-stack-parser/error-stack-parser.js","webpack:///./~/error-stack-parser/~/stackframe/stackframe.js","webpack:///./src/util.js","webpack:///./~/console-polyfill/index.js","webpack:///./src/xhr.js","webpack:///./vendor/JSON-js/json2.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;;AAEA;;;AAGA;AACA;;;AAGA;AACA,oDAAmD;;AAEnD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;;AAEA;;;;;;;AC9CA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,oBAAoB;AACnC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;;;;;AClHA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;;AAGA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAiB,iBAAiB;AAClC;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,MAAK;AACL,6CAA4C;AAC5C,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,MAAK;AACL;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAc,UAAU,2BAA2B,kBAAkB;AACrE;;AAEA,wCAAuC;AACvC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL,eAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,gBAAgB;AAC/B;AACA,qBAAoB,6CAA6C;AACjE;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB,qBAAqB;AACtC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,qBAAqB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA,kBAAiB,wBAAwB;AACzC;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,kBAAiB,wBAAwB;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,gDAA+C,aAAa;AAC5D,kBAAiB,aAAa;;AAE9B;AACA;AACA,gBAAe,iBAAiB;AAChC;AACA;;AAEA;AACA;AACA;;AAEA,kBAAiB,gBAAgB;AACjC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH,qBAAoB,oBAAoB;AACxC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,gBAAe,SAAS;AACxB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB,sBAAsB;AAC1C;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAsB,iBAAiB,oCAAoC;AAC3E;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,qBAAoB,kBAAkB;AACtC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH,qBAAoB,gBAAgB;AACpC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oDAAmD;AACnD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA,cAAa;AACb;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAC;;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAC;;;AAGD;AACA;;AAEA;AACA,uCAAsC;AACtC;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAG;AACH;;;AAGA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mCAAkC;AAClC;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAe,4BAA4B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,oCAAmC;AACnC;AACA,aAAY;AACZ,IAAG;AACH;AACA;AACA;AACA;;;AAGA;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wCAAuC,gGAAgG;AACvI,8CAA6C,kHAAkH;;AAE/J;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW,0BAA0B;AACrC;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA8C;AAC9C;AACA;AACA,UAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA,IAAG;;AAEH;;;AAGA;AACA;AACA;AACA;AACA;;;;;;;;AC7jCA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAmB;;AAEnB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;;AAEA,QAAO,YAAY;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA,OAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;ACpFA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;;AAEA;;AAEA,oBAAmB,wBAAwB;AAC3C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACzFA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA,EAAC;AACD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA,4BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA,4BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,cAAa;AACb;AACA,cAAa;AACb;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAa;AACb,UAAS;;AAET;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;;AAET;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,cAAa;AACb;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;;AAEA,gDAA+C,SAAS;AACxD;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;;AAEA,gDAA+C,SAAS;AACxD;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,EAAC;;;;;;;;AC/LD;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;;AAET;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;;AAET;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;;AAET;AACA,4DAA2D,UAAU;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAC;;;;;;;AC1GD;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;;;AAGA;AACA,aAAY;AACZ;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH,gBAAe,gBAAgB;AAC/B;AACA;AACA;;AAEA,cAAa,iBAAiB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;;;;;;AClJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;;;;;;;ACnBA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,kBAAkB;AACjC;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;AC1JA;AACA;AACA;;AAEA;;AAEA;;AAEA;;;AAGA;AACA;;AAEA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,0EAAyE;AACzE;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAoB;AACpB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,0CAAyC,iBAAiB;AAC1D,+BAA8B,kBAAkB;;;AAGhD,0CAAyC,iBAAiB;AAC1D,uCAAsC,6BAA6B;;AAEnE;AACA;AACA;AACA,cAAa;AACb;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;;AAGb;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA,4BAA2B,YAAY;AACvC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,4BAA2B,YAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,sBAAqB;AACrB;AACA,qBAAoB,wDAAwD;AAC5E,qBAAoB,0BAA0B;AAC9C;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,4BAA2B,WAAW;AACtC;AACA;;AAEA;;AAEA,cAAa;AACb;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,6BAA4B,UAAU;AACtC;AACA;;;AAGA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,OAAO;;AAE1B,0BAAyB;AACzB,wEAAuE,EAAE;AACzE;AACA;;AAEA;AACA,gCAA+B;AAC/B;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,6BAA4B,MAAM;AAClC;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA","file":"rollbar.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 325d7ee092994c0182de","'use strict';\n\n/* globals __USE_JSON__ */\n\n\nvar globalnotifier = require('../globalnotifier');\nvar notifier = require('../notifier');\n\n\nfunction setupJSON() {\n  var JSONObject = typeof JSON === 'undefined' ? {} : JSON;\n\n  if (__USE_JSON__) {\n    // This adds the script to this context. We need it since this library\n    // is not a CommonJs or AMD module.\n    var setupCustomJSON = require('../../vendor/JSON-js/json2.js');\n\n    var customJSON = {};\n    setupCustomJSON(customJSON);\n\n    JSONObject = customJSON;\n  }\n\n  globalnotifier.setupJSON(JSONObject);\n}\n\n\nsetupJSON();\n\n\nvar config = window._rollbarConfig;\nvar alias = config && config.globalAlias || 'Rollbar';\nvar shimRunning = window[alias] && typeof window[alias].shimId !== 'undefined';\n\n\n/* We must not initialize the full notifier here if the\n * shim is loaded, snippet_callback will do that for us\n */\nif (!shimRunning && config) {\n  globalnotifier.wrapper.init(config);\n} else {\n  window.Rollbar = globalnotifier.wrapper;\n  // We need to expose Notifier for the snippet\n  window.RollbarNotifier = notifier.Notifier;\n}\n\nmodule.exports = globalnotifier.wrapper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/bundles/rollbar.js\n// module id = 0\n// module chunks = 0","'use strict';\n\nvar notifier = require('./notifier');\nvar Util = require('./util');\n\nvar Notifier = notifier.Notifier;\n// Stub out the wrapped error which is set\nwindow._rollbarWrappedError = null;\n\n\n// Global window.onerror handler\nfunction _rollbarWindowOnError(client, old, args) {\n  if (!args[4] && window._rollbarWrappedError) {\n    args[4] = window._rollbarWrappedError;\n    window._rollbarWrappedError = null;\n  }\n\n  client.uncaughtError.apply(client, args);\n  if (old) {\n    old.apply(window, args);\n  }\n}\n\nfunction _extendListenerPrototype(client, prototype) {\n  if (prototype.hasOwnProperty && prototype.hasOwnProperty('addEventListener')) {\n    var oldAddEventListener = prototype.addEventListener;\n    prototype.addEventListener = function(event, callback, bubble) {\n      oldAddEventListener.call(this, event, client.wrap(callback), bubble);\n    };\n\n    var oldRemoveEventListener = prototype.removeEventListener;\n    prototype.removeEventListener = function(event, callback, bubble) {\n      oldRemoveEventListener.call(this, event, callback && callback._wrapped || callback, bubble);\n    };\n  }\n}\n\n\n// Add an init() method to do the same things that the shim would do\nvar wrapper = {};\nwrapper.init = function(config, parent) {\n  var client = new Notifier(parent);\n  client.configure(config);\n\n  if (config.captureUncaught) {\n    // Set the global onerror handler\n    var oldOnError;\n\n    // If the parent, probably a shim, stores an oldOnError function, use that one\n    if (parent && Util.isType(parent._rollbarOldOnError, 'function')) {\n      oldOnError = parent._rollbarOldOnError;\n    }\n    // If window.onerror doesn't belongs to our shim then we save it. This avoids\n    // using the shim onerror and send reports twice.\n    else if (window.onerror && !window.onerror.belongsToShim) {\n      oldOnError = window.onerror;\n    }\n\n    window.onerror = function() {\n      var args = Array.prototype.slice.call(arguments, 0);\n      _rollbarWindowOnError(client, oldOnError, args);\n    };\n\n    // Adapted from https://github.com/bugsnag/bugsnag-js\n    var globals = ['EventTarget', 'Window', 'Node', 'ApplicationCache', 'AudioTrackList', 'ChannelMergerNode', 'CryptoOperation', 'EventSource',\n     'FileReader', 'HTMLUnknownElement', 'IDBDatabase', 'IDBRequest', 'IDBTransaction', 'KeyOperation', 'MediaController',\n     'MessagePort', 'ModalWindow', 'Notification', 'SVGElementInstance', 'Screen', 'TextTrack', 'TextTrackCue',\n     'TextTrackList', 'WebSocket', 'WebSocketWorker', 'Worker', 'XMLHttpRequest', 'XMLHttpRequestEventTarget',\n     'XMLHttpRequestUpload'];\n\n    var i;\n    var global;\n    for (i = 0; i < globals.length; ++i) {\n      global = globals[i];\n\n      if (window[global] && window[global].prototype) {\n        _extendListenerPrototype(client, window[global].prototype);\n      }\n    }\n  }\n\n  if (config.captureUnhandledRejections) {\n    if (parent && Util.isType(parent._unhandledRejectionHandler, 'function')) {\n      window.removeEventListener('unhandledrejection', parent._unhandledRejectionHandler)\n    }\n\n    client._unhandledRejectionHandler = function (event) {\n      var reason = event.reason;\n      var promise = event.promise;\n      // Some Promise libraries do not yet conform to the standard and place the reason and promise inside\n      // a detail attribute\n      var detail = event.detail;\n\n      if (!reason && detail) {\n        reason = detail.reason;\n        promise = detail.promise;\n      }\n\n      client.unhandledRejection(reason, promise);\n    };\n\n    window.addEventListener('unhandledrejection', client._unhandledRejectionHandler);\n  }\n\n  window.Rollbar = client;\n  // Finally, start processing payloads using the global notifier\n  Notifier.processPayloads();\n  return client;\n};\n\n\nmodule.exports = {\n  wrapper: wrapper,\n  setupJSON: notifier.setupJSON\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/globalnotifier.js\n// module id = 1\n// module chunks = 0","'use strict';\n\n/* globals __NOTIFIER_VERSION__ */\n/* globals __DEFAULT_ENDPOINT__ */\n/* globals __DEFAULT_SCRUB_FIELDS__ */\n/* globals __DEFAULT_LOG_LEVEL__ */\n/* globals __DEFAULT_REPORT_LEVEL__ */\n/* globals __DEFAULT_UNCAUGHT_ERROR_LEVEL */\n/* globals __DEFAULT_ITEMS_PER_MIN__ */\n/* globals __DEFAULT_MAX_ITEMS__ */\n/* globals DOMException */\n\n\nvar extend = require('extend');\n\nvar errorParser = require('./error_parser');\nvar Util = require('./util');\nvar xhr = require('./xhr');\n\nvar XHR = xhr.XHR;\nvar ConnectionError = xhr.ConnectionError;\nvar RollbarJSON = null;\n\nfunction setupJSON(JSON) {\n  RollbarJSON = JSON;\n  xhr.setupJSON(JSON);\n}\n\nfunction _wrapNotifierFn(fn, ctx) {\n  return function() {\n    var self = ctx || this;\n    try {\n      return fn.apply(self, arguments);\n    } catch (e) {\n      console.error('[Rollbar]:', e);\n    }\n  };\n}\n\n\nvar payloadProcessorTimeout;\nfunction _notifyPayloadAvailable() {\n  if (!payloadProcessorTimeout) {\n    payloadProcessorTimeout = setTimeout(_deferredPayloadProcess, 1000);\n  }\n}\n\n// Updated by the build process to match package.json\nNotifier.NOTIFIER_VERSION = __NOTIFIER_VERSION__;\nNotifier.DEFAULT_ENDPOINT = __DEFAULT_ENDPOINT__;\nNotifier.DEFAULT_SCRUB_FIELDS = __DEFAULT_SCRUB_FIELDS__;\nNotifier.DEFAULT_LOG_LEVEL = __DEFAULT_LOG_LEVEL__;\nNotifier.DEFAULT_REPORT_LEVEL = __DEFAULT_REPORT_LEVEL__;\nNotifier.DEFAULT_UNCAUGHT_ERROR_LEVEL = __DEFAULT_UNCAUGHT_ERROR_LEVEL;\nNotifier.DEFAULT_ITEMS_PER_MIN = __DEFAULT_ITEMS_PER_MIN__;\nNotifier.DEFAULT_MAX_ITEMS = __DEFAULT_MAX_ITEMS__;\n\nNotifier.LEVELS = {\n  debug: 0,\n  info: 1,\n  warning: 2,\n  error: 3,\n  critical: 4\n};\n\nNotifier.RETRY_DELAY = 1000 * 10;\n\n// This is the global queue where all notifiers will put their\n// payloads to be sent to Rollbar.\nwindow._rollbarPayloadQueue = window._rollbarPayloadQueue || [];\n\n// This contains global options for all Rollbar notifiers.\nwindow._globalRollbarOptions = {\n  startTime: (new Date()).getTime(),\n  maxItems: Notifier.DEFAULT_MAX_ITEMS,\n  itemsPerMinute: Notifier.DEFAULT_ITEMS_PER_MIN\n};\n\nvar _topLevelNotifier;\n\nfunction topLevelNotifier() {\n  return _topLevelNotifier;\n}\n\nfunction Notifier(parentNotifier) {\n  // Save the first notifier so we can use it to send system messages like\n  // when the rate limit is reached.\n  _topLevelNotifier = _topLevelNotifier || this;\n\n  var endpoint = 'https://' + Notifier.DEFAULT_ENDPOINT;\n  this.options = {\n    enabled: true,\n    endpoint: endpoint,\n    environment: 'production',\n    scrubFields: extend([], Notifier.DEFAULT_SCRUB_FIELDS),\n    checkIgnore: null,\n    logLevel: Notifier.DEFAULT_LOG_LEVEL,\n    reportLevel: Notifier.DEFAULT_REPORT_LEVEL,\n    uncaughtErrorLevel: Notifier.DEFAULT_UNCAUGHT_ERROR_LEVEL,\n    payload: {}\n  };\n\n  this.lastError = null;\n  this.plugins = {};\n  this.parentNotifier = parentNotifier;\n\n  if (parentNotifier) {\n    // If the parent notifier has the shimId\n    // property it means that it's a Rollbar shim.\n    if (parentNotifier.hasOwnProperty('shimId')) {\n      // After we set this, the shim is just a proxy to this\n      // Notifier instance.\n      parentNotifier.notifier = this;\n    } else {\n      this.configure(parentNotifier.options);\n    }\n  }\n}\n\n\nvar NotifierPrototype = Notifier.prototype;\n\n\n/*\n * Returns an Object with keys:\n * {\n *  message: String,\n *  err: Error,\n *  custom: Object\n * }\n */\nNotifierPrototype._getLogArgs = function(args) {\n  var level = this.options.logLevel || Notifier.DEFAULT_LOG_LEVEL;\n  var message;\n  var err;\n  var custom;\n  var callback;\n  var argT;\n  var arg;\n  var extraArgs = [];\n\n  for (var i = 0; i < args.length; ++i) {\n    arg = args[i];\n\n    argT = Util.typeName(arg);\n    if (argT === 'string') {\n      if (message) {\n        extraArgs.push(arg);\n      } else {\n        message = arg;\n      }\n    } else if (argT === 'function') {\n      callback = _wrapNotifierFn(arg, this);  // wrap the callback in a try/catch block\n    } else if (argT === 'date') {\n      extraArgs.push(arg);\n    } else if (argT === 'error' ||\n               arg instanceof Error ||\n               (typeof DOMException !== 'undefined' && arg instanceof DOMException)) {\n      if (err) {\n        extraArgs.push(arg);\n      } else {\n        err = arg;\n      }\n    } else if (argT === 'object' || argT === 'array') {\n      if (custom) {\n        extraArgs.push(arg);\n      } else {\n        custom = arg;\n      }\n    }\n  }\n\n  // Save any of the extra arguments passed into the log function\n  // into `extraArgs` so they they show up in the payload.\n  if (extraArgs.length) {\n    custom = custom || {};\n    custom.extraArgs = extraArgs;\n  }\n\n  // TODO(cory): somehow pass in timestamp too...\n\n  return {\n    level: level,\n    message: message,\n    err: err,\n    custom: custom,\n    callback: callback\n  };\n};\n\n\nNotifierPrototype._route = function(path) {\n  var endpoint = this.options.endpoint;\n\n  var endpointTrailingSlash = /\\/$/.test(endpoint);\n  var pathBeginningSlash = /^\\//.test(path);\n\n  if (endpointTrailingSlash && pathBeginningSlash) {\n    path = path.substring(1);\n  } else if (!endpointTrailingSlash && !pathBeginningSlash) {\n    path = '/' + path;\n  }\n\n  return endpoint + path;\n};\n\n\n/*\n * Given a queue containing each call to the shim, call the\n * corresponding method on this instance.\n *\n * shim queue contains:\n *\n * {shim: Rollbar, method: 'info', args: ['hello world', exc], ts: Date}\n */\nNotifierPrototype._processShimQueue = function(shimQueue) {\n  var shim;\n  var obj;\n  var method;\n  var args;\n  var shimToNotifier = {};\n  var parentShim;\n  var parentNotifier;\n  var notifier;\n\n  // For each of the messages in the shimQueue we need to:\n  // 1. get/create the notifier for that shim\n  // 2. apply the message to the notifier\n  while ((obj = shimQueue.shift())) {\n    shim = obj.shim;\n    method = obj.method;\n    args = obj.args;\n    parentShim = shim.parentShim;\n\n    // Get the current notifier based on the shimId\n    notifier = shimToNotifier[shim.shimId];\n    if (!notifier) {\n\n      // If there is no notifier associated with the shimId\n      // Check to see if there's a parent shim\n      if (parentShim) {\n\n        // If there is a parent shim, get the parent notifier\n        // and create a new notifier for the current shim.\n        parentNotifier = shimToNotifier[parentShim.shimId];\n\n        // Create a new Notifier which will process all of the shim's\n        // messages\n        notifier = new Notifier(parentNotifier);\n      } else {\n        // If there is no parent, assume the shim is the top\n        // level shim and thus, should use this as the notifier.\n        notifier = this;\n      }\n\n      // Save off the shimId->notifier mapping\n      shimToNotifier[shim.shimId] = notifier;\n    }\n\n    if (notifier[method] && Util.isType(notifier[method], 'function')) {\n      notifier[method].apply(notifier, args);\n    }\n  }\n};\n\n\n/*\n * Builds and returns an Object that will be enqueued onto the\n * window._rollbarPayloadQueue array to be sent to Rollbar.\n */\nNotifierPrototype._buildPayload = function(ts, level, message, stackInfo, custom) {\n  var accessToken = this.options.accessToken;\n\n  // NOTE(cory): DEPRECATED\n  // Pass in {payload: {environment: 'production'}} instead of just {environment: 'production'}\n  var environment = this.options.environment;\n\n  var notifierOptions = extend(true, {}, this.options.payload);\n  var uuid = Util.uuid4();\n\n  if (Notifier.LEVELS[level] === undefined) {\n    throw new Error('Invalid level');\n  }\n\n  if (!message && !stackInfo && !custom) {\n    throw new Error('No message, stack info or custom data');\n  }\n\n  var payloadData = {\n    environment: environment,\n    endpoint: this.options.endpoint,\n    uuid: uuid,\n    level: level,\n    platform: 'browser',\n    framework: 'browser-js',\n    language: 'javascript',\n    body: this._buildBody(message, stackInfo, custom),\n    request: {\n      url: window.location.href,\n      query_string: window.location.search,\n      user_ip: '$remote_ip'\n    },\n    client: {\n      runtime_ms: ts.getTime() - window._globalRollbarOptions.startTime,\n      timestamp: Math.round(ts.getTime() / 1000),\n      javascript: {\n        browser: window.navigator.userAgent,\n        language: window.navigator.language,\n        cookie_enabled: window.navigator.cookieEnabled,\n        screen: {\n          width: window.screen.width,\n          height: window.screen.height\n        },\n        plugins: this._getBrowserPlugins()\n      }\n    },\n    server: {},\n    notifier: {\n      name: 'rollbar-browser-js',\n      version: Notifier.NOTIFIER_VERSION\n    }\n  };\n\n  if (notifierOptions.body) {\n    delete notifierOptions.body;\n  }\n\n  // Overwrite the options from configure() with the payload\n  // data.\n  var payload = {\n    access_token: accessToken,\n    data: extend(true, payloadData, notifierOptions)\n  };\n\n  // Only scrub the data section since we never want to scrub \"access_token\"\n  // even if it's in the scrub fields\n  this._scrub(payload.data);\n\n  return payload;\n};\n\n\nNotifierPrototype._buildBody = function(message, stackInfo, custom) {\n  var body;\n  if (stackInfo) {\n    body = _buildPayloadBodyTrace(message, stackInfo, custom);\n  } else {\n    body = _buildPayloadBodyMessage(message, custom);\n  }\n  return body;\n};\n\n\nNotifierPrototype._getBrowserPlugins = function() {\n  if (!this._browserPlugins) {\n    var navPlugins = window.navigator.plugins || [];\n    var cur;\n    var numPlugins = navPlugins.length;\n    var plugins = [];\n    var i;\n    for (i = 0; i < numPlugins; ++i) {\n      cur = navPlugins[i];\n      plugins.push({name: cur.name, description: cur.description});\n    }\n    this._browserPlugins = plugins;\n  }\n  return this._browserPlugins;\n};\n\n\n/*\n * Does an in-place modification of obj such that:\n * 1. All keys that match the notifier's options.scrubFields\n *    list will be normalized into all '*'\n * 2. Any query string params that match the same criteria will have\n *    their values normalized as well.\n */\nNotifierPrototype._scrub = function(obj) {\n  var scrubFields = this.options.scrubFields;\n  var paramRes = this._getScrubFieldRegexs(scrubFields);\n  var queryRes = this._getScrubQueryParamRegexs(scrubFields);\n\n  function redactQueryParam(dummy0, paramPart, dummy1, dummy2, dummy3, valPart) {\n    return paramPart + Util.redact(valPart);\n  }\n\n  function paramScrubber(v) {\n    var i;\n    if (Util.isType(v, 'string')) {\n      for (i = 0; i < queryRes.length; ++i) {\n        v = v.replace(queryRes[i], redactQueryParam);\n      }\n    }\n    return v;\n  }\n\n  function valScrubber(k, v) {\n    var i;\n    for (i = 0; i < paramRes.length; ++i) {\n      if (paramRes[i].test(k)) {\n        v = Util.redact(v);\n        break;\n      }\n    }\n    return v;\n  }\n\n  function scrubber(k, v) {\n    var tmpV = valScrubber(k, v);\n    if (tmpV === v) {\n      return paramScrubber(tmpV);\n    } else {\n      return tmpV;\n    }\n  }\n\n  Util.traverse(obj, scrubber);\n  return obj;\n};\n\n\nNotifierPrototype._getScrubFieldRegexs = function(scrubFields) {\n  var ret = [];\n  var pat;\n  for (var i = 0; i < scrubFields.length; ++i) {\n    pat = '\\\\[?(%5[bB])?' + scrubFields[i] + '\\\\[?(%5[bB])?\\\\]?(%5[dD])?';\n    ret.push(new RegExp(pat, 'i'));\n  }\n  return ret;\n};\n\n\nNotifierPrototype._getScrubQueryParamRegexs = function(scrubFields) {\n  var ret = [];\n  var pat;\n  for (var i = 0; i < scrubFields.length; ++i) {\n    pat = '\\\\[?(%5[bB])?' + scrubFields[i] + '\\\\[?(%5[bB])?\\\\]?(%5[dD])?';\n    ret.push(new RegExp('(' + pat + '=)([^&\\\\n]+)', 'igm'));\n  }\n  return ret;\n};\n\nNotifierPrototype._urlIsWhitelisted = function(payload){\n  var whitelist, trace, frame, filename, frameLength, url, listLength, urlRegex;\n  var i, j;\n\n  try {\n    whitelist = this.options.hostWhiteList;\n    trace = payload && payload.data && payload.data.body && payload.data.body.trace;\n\n    if (!whitelist || whitelist.length === 0) { return true; }\n    if (!trace) { return true; }\n\n    listLength = whitelist.length;\n    frameLength = trace.frames.length;\n    for (i = 0; i < frameLength; i++) {\n      frame = trace.frames[i];\n      filename = frame.filename;\n\n      if (!Util.isType(filename, 'string')) {\n        return true;\n      }\n\n      for (j = 0; j < listLength; j++) {\n        url = whitelist[j];\n        urlRegex = new RegExp(url);\n\n        if (urlRegex.test(filename)){\n          return true;\n        }\n      }\n    }\n  } catch (e) {\n    this.configure({hostWhiteList: null});\n    console.error(\"[Rollbar]: Error while reading your configuration's hostWhiteList option. Removing custom hostWhiteList.\", e);\n    return true;\n  }\n\n  return false;\n};\n\nNotifierPrototype._messageIsIgnored = function(payload){\n  var exceptionMessage, i, ignoredMessages, len, messageIsIgnored, rIgnoredMessage, trace, body, traceMessage, bodyMessage;\n  try {\n    messageIsIgnored = false;\n    ignoredMessages = this.options.ignoredMessages;\n    \n    if (!ignoredMessages || ignoredMessages.length === 0) {\n      return false;\n    }\n\n    body =  payload &&\n            payload.data &&\n            payload.data.body;\n\n    traceMessage =  body && \n                    body.trace &&\n                    body.trace.exception && \n                    body.trace.exception.message;\n    \n    bodyMessage = body && \n                  body.message && \n                  body.message.body;\n\n    exceptionMessage = traceMessage || bodyMessage;\n\n    if (!exceptionMessage){\n      return false;\n    }\n\n    len = ignoredMessages.length;\n    for (i = 0; i < len; i++) {\n      rIgnoredMessage = new RegExp(ignoredMessages[i], 'gi');\n      messageIsIgnored = rIgnoredMessage.test(exceptionMessage);\n\n      if (messageIsIgnored) {\n        break;\n      }\n    }\n  }\n  catch(e) {\n    this.configure({ignoredMessages: null});\n    console.error(\"[Rollbar]: Error while reading your configuration's ignoredMessages option. Removing custom ignoredMessages.\");\n  }\n\n  return messageIsIgnored;\n};\n\nNotifierPrototype._enqueuePayload = function(payload, isUncaught, callerArgs, callback) {\n\n  var payloadToSend = {\n    callback: callback,\n    accessToken: this.options.accessToken,\n    endpointUrl: this._route('item/'),\n    payload: payload\n  };\n\n  var ignoredCallback = function() {\n    if (callback) {\n      // If the item was ignored call the callback anyway\n      var msg = 'This item was not sent to Rollbar because it was ignored. ' +\n                'This can happen if a custom checkIgnore() function was used ' +\n                'or if the item\\'s level was less than the notifier\\' reportLevel. ' +\n                'See https://rollbar.com/docs/notifier/rollbar.js/configuration for more details.';\n\n      callback(null, {err: 0, result: {id: null, uuid: null, message: msg}});\n    }\n  };\n\n  // Internal checkIgnore will check the level against the minimum\n  // report level from this.options\n  if (this._internalCheckIgnore(isUncaught, callerArgs, payload)) {\n    ignoredCallback();\n    return;\n  }\n\n  // Users can set their own ignore criteria using this.options.checkIgnore()\n  try {\n    if (Util.isType(this.options.checkIgnore, 'function') &&\n        this.options.checkIgnore(isUncaught, callerArgs, payload)) {\n      ignoredCallback();\n      return;\n    }\n  } catch (e) {\n    // Disable the custom checkIgnore and report errors in the checkIgnore function\n    this.configure({checkIgnore: null});\n    console.error('[Rollbar]: Error while calling custom checkIgnore() function. Removing custom checkIgnore().', e);\n  }\n\n  if (!this._urlIsWhitelisted(payload)) {\n    return;\n  }\n\n  if (this._messageIsIgnored(payload)) {\n    return;\n  }\n\n  if (this.options.verbose) {\n    if (payload.data && payload.data.body && payload.data.body.trace) {\n      var trace = payload.data.body.trace;\n      var exceptionMessage = trace.exception.message;\n      console.error('[Rollbar]: ', exceptionMessage);\n    }\n\n    // FIXME: Some browsers do not output objects as json to the console, and\n    // instead write [object Object], so let's write the message first to ensure that is logged.\n    console.info('[Rollbar]: ', payloadToSend);\n  }\n\n  if (Util.isType(this.options.logFunction, 'function')) {\n    this.options.logFunction(payloadToSend);\n  }\n\n  try {\n    if (Util.isType(this.options.transform, 'function')) {\n      this.options.transform(payload);\n    }\n  } catch (e) {\n    this.configure({transform: null});\n    console.error('[Rollbar]: Error while calling custom transform() function. Removing custom transform().', e);\n  }\n\n  if (this.options.enabled) {\n    directlyEnqueuePayload(payloadToSend);\n  }\n};\n\nfunction directlyEnqueuePayload(payloadToSend) {\n  window._rollbarPayloadQueue.push(payloadToSend);\n  _notifyPayloadAvailable();\n}\n\nNotifierPrototype._internalCheckIgnore = function(isUncaught, callerArgs, payload) {\n  var level = callerArgs[0];\n  var levelVal = Notifier.LEVELS[level] || 0;\n  var reportLevel = Notifier.LEVELS[this.options.reportLevel] || 0;\n\n  if (levelVal < reportLevel) {\n    return true;\n  }\n\n  var plugins = this.options ? this.options.plugins : {};\n  if (plugins && plugins.jquery && plugins.jquery.ignoreAjaxErrors) {\n    try {\n      // The jQuery plugin adds in this key. Return true if it exists since\n      // we are ignoring ajax errors via the plugin config.\n      return !!(payload.data.body.message.extra.isAjax);\n    } catch (e) {\n      return false;\n    }\n  }\n\n  return false;\n};\n\n\n/*\n * Logs stuff to Rollbar using the default\n * logging level.\n *\n * Can be called with the following, (order doesn't matter but type does):\n * - message: String\n * - err: Error object, must have a .stack property or it will be\n *   treated as custom data\n * - custom: Object containing custom data to be sent along with\n *   the item\n * - callback: Function to call once the item is reported to Rollbar\n * - isUncaught: True if this error originated from an uncaught exception handler\n * - ignoreRateLimit: True if this item should be allowed despite rate limit checks\n */\nNotifierPrototype._log = function(level, message, err, custom, callback, isUncaught, ignoreRateLimit) {\n  var stackInfo = null;\n  if (err) {\n    try {\n      // If we've already calculated the stack trace for the error, use it.\n      // This can happen for wrapped errors that don't have a \"stack\" property.\n      stackInfo = err._savedStackTrace ? err._savedStackTrace : errorParser.parse(err);\n\n      // Don't report the same error more than once\n      if (err === this.lastError) {\n        return;\n      }\n\n      this.lastError = err;\n    } catch (e) {\n      console.error('[Rollbar]: Error while parsing the error object.', e);\n      // err is not something we can parse so let's just send it along as a string\n      message = err.message || err.description || message || String(err);\n      err = null;\n    }\n  }\n\n  var payload = this._buildPayload(new Date(), level, message, stackInfo, custom);\n  if (ignoreRateLimit) {\n    payload.ignoreRateLimit = true;\n  }\n  this._enqueuePayload(payload, isUncaught ? true : false, [level, message, err, custom], callback);\n};\n\nNotifierPrototype.log = _generateLogFn();\nNotifierPrototype.debug = _generateLogFn('debug');\nNotifierPrototype.info = _generateLogFn('info');\nNotifierPrototype.warn = _generateLogFn('warning'); // for console.warn() compatibility\nNotifierPrototype.warning = _generateLogFn('warning');\nNotifierPrototype.error = _generateLogFn('error');\nNotifierPrototype.critical = _generateLogFn('critical');\n\n// Adapted from tracekit.js\nNotifierPrototype.uncaughtError = _wrapNotifierFn(function(message, url, lineNo, colNo, err, context) {\n  context = context || null;\n  if (err && Util.isType(err, 'error')) {\n    this._log(this.options.uncaughtErrorLevel, message, err, context, null, true);\n    return;\n  }\n\n  // NOTE(cory): sometimes users will trigger an \"error\" event\n  // on the window object directly which will result in errMsg\n  // being an Object instead of a string.\n  //\n  if (url && Util.isType(url, 'error')) {\n    this._log(this.options.uncaughtErrorLevel, message, url, context, null, true);\n    return;\n  }\n\n  var location = {\n    'url': url || '',\n    'line': lineNo\n  };\n  location.func = errorParser.guessFunctionName(location.url, location.line);\n  location.context = errorParser.gatherContext(location.url, location.line);\n  var stack = {\n    'mode': 'onerror',\n    'message': err ? String(err) : (message || 'uncaught exception'),\n    'url': document.location.href,\n    'stack': [location],\n    'useragent': navigator.userAgent\n  };\n\n  var payload = this._buildPayload(new Date(), this.options.uncaughtErrorLevel,\n    message, stack, context);\n  this._enqueuePayload(payload, true, [this.options.uncaughtErrorLevel,\n    message, url, lineNo, colNo, err]);\n});\n\nNotifierPrototype.unhandledRejection = _wrapNotifierFn(function(reason, promise) {\n  if (reason == null) {\n    _topLevelNotifier._log(_topLevelNotifier.options.uncaughtErrorLevel, //level\n      'unhandled rejection was null or undefined!', // message\n      null, // err\n      {}, // custom\n      null,  // callback\n      false, // isUncaught\n      false); // ignoreRateLimit\n    return;\n  }\n\n  var message = reason.message || (reason ? String(reason) : 'unhandled rejection');\n\n  // If the reason error was thrown within a wrap call, we'll extract the context given there.\n  // If users want to provide their Promise implementation with knowledge of the rollbar\n  // context they are created in, we'll search for that attribute, too.\n  var context = reason._rollbarContext || promise._rollbarContext || null;\n\n  if (reason && Util.isType(reason, 'error')) {\n    this._log(this.options.uncaughtErrorLevel, message, reason, context, null, true);\n    return;\n  }\n\n  var location = {\n    'url': '',\n    'line': 0\n  };\n  location.func = errorParser.guessFunctionName(location.url, location.line);\n  location.context = errorParser.gatherContext(location.url, location.line);\n  var stack = {\n    'mode': 'unhandledrejection',\n    'message': message,\n    'url': document.location.href,\n    'stack': [location],\n    'useragent': navigator.userAgent\n  };\n\n  var payload = this._buildPayload(new Date(), this.options.uncaughtErrorLevel,\n    message, stack, context);\n  this._enqueuePayload(payload, true, [this.options.uncaughtErrorLevel,\n    message, location.url, location.line, 0, reason, promise]);\n});\n\n\nNotifierPrototype.global = _wrapNotifierFn(function(options) {\n  options = options || {};\n  var knownOptions = {\n    startTime: options.startTime,\n    maxItems: options.maxItems,\n    itemsPerMinute: options.itemsPerMinute\n  };\n\n  extend(true, window._globalRollbarOptions, knownOptions);\n\n  if (options.maxItems !== undefined) {\n    rateLimitCounter = 0;\n  }\n\n  if (options.itemsPerMinute !== undefined) {\n    rateLimitPerMinCounter = 0;\n  }\n});\n\n\nNotifierPrototype.configure = _wrapNotifierFn(function(options, overwrite) {\n  // TODO(cory): only allow non-payload keys that we understand\n\n  // Make a copy of the options object for this notifier\n  var newOptionsCopy = extend(true, {}, options);\n  extend(!overwrite, this.options, newOptionsCopy);\n  this.global(newOptionsCopy);\n});\n\n/*\n * Create a new Notifier instance which has the same options\n * as the current notifier + options to override them.\n */\nNotifierPrototype.scope = _wrapNotifierFn(function(payloadOptions) {\n  var scopedNotifier = new Notifier(this);\n  extend(true, scopedNotifier.options.payload, payloadOptions);\n  return scopedNotifier;\n});\n\nNotifierPrototype.wrap = function(f, context) {\n  try {\n    var ctxFn;\n    if (Util.isType(context, 'function')) {\n      ctxFn = context;\n    } else {\n      ctxFn = function() {\n        return context || {};\n      };\n    }\n\n    if (!Util.isType(f, 'function')) {\n      return f;\n    }\n\n    // If the given function is already a wrapped function, just\n    // return it instead of wrapping twice\n    if (f._isWrap) {\n      return f;\n    }\n\n    if (!f._wrapped) {\n      f._wrapped = function () {\n        try {\n          return f.apply(this, arguments);\n        } catch(e) {\n          if (typeof e === 'string') {\n            e = new String(e);\n          }\n          if (!e.stack) {\n            e._savedStackTrace = errorParser.parse(e);\n          }\n          e._rollbarContext = ctxFn() || {};\n          e._rollbarContext._wrappedSource = f.toString();\n\n          window._rollbarWrappedError = e;\n          throw e;\n        }\n      };\n\n      f._wrapped._isWrap = true;\n\n      for (var prop in f) {\n        if (f.hasOwnProperty(prop)) {\n          f._wrapped[prop] = f[prop];\n        }\n      }\n    }\n\n    return f._wrapped;\n  } catch (e) {\n    // Try-catch here is to work around issue where wrap() fails when used inside Selenium.\n    // Return the original function if the wrap fails.\n    return f;\n  }\n};\n\n\nNotifierPrototype.loadFull = function() {\n  console.error('[Rollbar]: Unexpected Rollbar.loadFull() called on a Notifier instance');\n};\n\n\n/***** Misc *****/\n\nfunction _generateLogFn(level) {\n  return _wrapNotifierFn(function _logFn() {\n    var args = this._getLogArgs(arguments);\n\n    return this._log(level || args.level || this.options.logLevel || Notifier.DEFAULT_LOG_LEVEL,\n      args.message, args.err, args.custom, args.callback);\n  });\n}\n\n\nfunction _buildPayloadBodyMessage(message, custom) {\n  if (!message) {\n    if (custom) {\n      message = RollbarJSON.stringify(custom);\n    } else {\n      message = '';\n    }\n  }\n  var result = {\n    body: message\n  };\n\n  if (custom) {\n    result.extra = extend(true, {}, custom);\n  }\n\n  return {\n    message: result\n  };\n}\n\n\nfunction _buildPayloadBodyTrace(description, stackInfo, custom) {\n  var guess = errorParser.guessErrorClass(stackInfo.message);\n  var className = stackInfo.name || guess[0];\n  var message = guess[1];\n  var trace = {\n    exception: {\n      'class': className,\n      message: message\n    }\n  };\n\n  if (description) {\n    trace.exception.description = description || 'uncaught exception';\n  }\n\n  // Transform a TraceKit stackInfo object into a Rollbar trace\n  if (stackInfo.stack) {\n    var stackFrame;\n    var frame;\n    var code;\n    var pre;\n    var post;\n    var contextLength;\n    var i, mid;\n\n    trace.frames = [];\n    for (i = 0; i < stackInfo.stack.length; ++i) {\n      stackFrame = stackInfo.stack[i];\n      frame = {\n        filename: stackFrame.url ? Util.sanitizeUrl(stackFrame.url) : '(unknown)',\n        lineno: stackFrame.line || null,\n        method: (!stackFrame.func || stackFrame.func === '?') ? '[anonymous]' : stackFrame.func,\n        colno: stackFrame.column\n      };\n\n      code = pre = post = null;\n      contextLength = stackFrame.context ? stackFrame.context.length : 0;\n      if (contextLength) {\n        mid = Math.floor(contextLength / 2);\n        pre = stackFrame.context.slice(0, mid);\n        code = stackFrame.context[mid];\n        post = stackFrame.context.slice(mid);\n      }\n\n      if (code) {\n        frame.code = code;\n      }\n\n      if (pre || post) {\n        frame.context = {};\n        if (pre && pre.length) {\n          frame.context.pre = pre;\n        }\n        if (post && post.length) {\n          frame.context.post = post;\n        }\n      }\n\n      if (stackFrame.args) {\n        frame.args = stackFrame.args;\n      }\n\n      trace.frames.push(frame);\n    }\n\n    // NOTE(cory): reverse the frames since rollbar.com expects the most recent call last\n    trace.frames.reverse();\n\n    if (custom) {\n      trace.extra = extend(true, {}, custom);\n    }\n    return {trace: trace};\n  } else {\n    // no frames - not useful as a trace. just report as a message.\n    return _buildPayloadBodyMessage(className + ': ' + message, custom);\n  }\n}\n\n\n/***** Payload processor *****/\n\n\nNotifier.processPayloads = function(immediate) {\n  if (immediate) {\n    _deferredPayloadProcess();\n\n    return;\n  }\n\n  _notifyPayloadAvailable();\n};\n\n\nfunction _deferredPayloadProcess() {\n  var payloadObj;\n\n  try {\n    while ((payloadObj = window._rollbarPayloadQueue.shift())) {\n      _processPayload(payloadObj);\n    }\n  } finally {\n    payloadProcessorTimeout = undefined;\n  }\n}\n\n\nvar rateLimitStartTime = new Date().getTime();\nvar rateLimitCounter = 0;\nvar rateLimitPerMinCounter = 0;\nfunction _processPayload(payloadObject) {\n  var url = payloadObject.endpointUrl;\n  var accessToken = payloadObject.accessToken;\n  var payload = payloadObject.payload;\n  var callback = payloadObject.callback || function cb() {};\n\n  var now = new Date().getTime();\n  if (now - rateLimitStartTime >= 60000) {\n    rateLimitStartTime = now;\n    rateLimitPerMinCounter = 0;\n  }\n\n  // Check to see if we have a rate limit set or if\n  // the rate limit has been met/exceeded.\n  var globalRateLimit = window._globalRollbarOptions.maxItems;\n  var globalRateLimitPerMin = window._globalRollbarOptions.itemsPerMinute;\n  var checkOverRateLimit = function() { return !payload.ignoreRateLimit && globalRateLimit >= 1 && rateLimitCounter >= globalRateLimit; };\n  var checkOverRateLimitPerMin = function() { return !payload.ignoreRateLimit && globalRateLimitPerMin >= 1 && rateLimitPerMinCounter >= globalRateLimitPerMin; };\n\n  if (checkOverRateLimit()) {\n    callback(new Error(globalRateLimit + ' max items reached'));\n    return;\n  } else if (checkOverRateLimitPerMin()) {\n    callback(new Error(globalRateLimitPerMin + ' items per minute reached'));\n    return;\n  } else {\n    rateLimitCounter++;\n    rateLimitPerMinCounter++;\n\n    // Check to see if we have just reached the rate limit. If so, notify the customer.\n    if (checkOverRateLimit()) {\n      _topLevelNotifier._log(_topLevelNotifier.options.uncaughtErrorLevel, //level\n          'maxItems has been hit. Ignoring errors for the remainder of the current page load.', // message\n          null, // err\n          {maxItems: globalRateLimit}, // custom\n          null,  // callback\n          false, // isUncaught\n          true); // ignoreRateLimit\n    }\n    // remove this key since it's only used for internal notifier logic\n    if (payload.ignoreRateLimit) {\n      delete payload.ignoreRateLimit;\n    }\n  }\n\n  // There's either no rate limit or we haven't met it yet so\n  // go ahead and send it.\n  XHR.post(url, accessToken, payload, function xhrCallback(err, resp) {\n    if (err) {\n      if (err instanceof ConnectionError) {\n        // We're calling the callback now with the error, disable the callback for future attempts.\n        payloadObject.callback = function () { };\n        setTimeout(function () {\n          directlyEnqueuePayload(payloadObject);\n        }, Notifier.RETRY_DELAY);\n      }\n\n      return callback(err);\n    }\n\n    // TODO(cory): parse resp as JSON\n    return callback(null, resp);\n  });\n\n}\n\n\nmodule.exports = {\n  Notifier: Notifier,\n  setupJSON: setupJSON,\n  topLevelNotifier: topLevelNotifier\n};\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/notifier.js\n// module id = 2\n// module chunks = 0","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) {/**/}\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone,\n\t\ttarget = arguments[0],\n\t\ti = 1,\n\t\tlength = arguments.length,\n\t\tdeep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t} else if ((typeof target !== 'object' && typeof target !== 'function') || target == null) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = target[name];\n\t\t\t\tcopy = options[name];\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\ttarget[name] = extend(deep, clone, copy);\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\ttarget[name] = copy;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/extend/index.js\n// module id = 3\n// module chunks = 0","'use strict';\n\nvar ErrorStackParser = require('error-stack-parser');\n\nvar UNKNOWN_FUNCTION = '?';\nvar ERR_CLASS_REGEXP = new RegExp('^(([a-zA-Z0-9-_$ ]*): *)?(Uncaught )?([a-zA-Z0-9-_$ ]*): ');\n\nfunction guessFunctionName() {\n  return UNKNOWN_FUNCTION;\n}\n\n\nfunction gatherContext() {\n  return null;\n}\n\n\nfunction Frame(stackFrame) {\n  var data = {};\n\n  data._stackFrame = stackFrame;\n\n  data.url = stackFrame.fileName;\n  data.line = stackFrame.lineNumber;\n  data.func = stackFrame.functionName;\n  data.column = stackFrame.columnNumber;\n  data.args = stackFrame.args;\n\n  data.context = gatherContext(data.url, data.line);\n\n  return data;\n}\n\n\nfunction Stack(exception) {\n  function getStack() {\n    var parserStack = [];\n\n    try {\n      parserStack = ErrorStackParser.parse(exception);\n    } catch(e) {\n      parserStack = [];\n    }\n\n    var stack = [];\n\n    for (var i = 0; i < parserStack.length; i++) {\n      stack.push(new Frame(parserStack[i]));\n    }\n\n    return stack;\n  }\n\n  return {\n    stack: getStack(),\n    message: exception.message,\n    name: exception.name\n  };\n}\n\n\nfunction parse(e) {\n  return new Stack(e);\n}\n\n\nfunction guessErrorClass(errMsg) {\n  if (!errMsg) {\n    return ['Unknown error. There was no error message to display.', ''];\n  }\n  var errClassMatch = errMsg.match(ERR_CLASS_REGEXP);\n  var errClass = '(unknown)';\n\n  if (errClassMatch) {\n    errClass = errClassMatch[errClassMatch.length - 1];\n    errMsg = errMsg.replace((errClassMatch[errClassMatch.length - 2] || '') + errClass + ':', '');\n    errMsg = errMsg.replace(/(^[\\s]+|[\\s]+$)/g, '');\n  }\n  return [errClass, errMsg];\n}\n\n\nmodule.exports = {\n  guessFunctionName: guessFunctionName,\n  guessErrorClass: guessErrorClass,\n  gatherContext: gatherContext,\n  parse: parse,\n  Stack: Stack,\n  Frame: Frame\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/error_parser.js\n// module id = 4\n// module chunks = 0","(function (root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('error-stack-parser', ['stackframe'], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('stackframe'));\n    } else {\n        root.ErrorStackParser = factory(root.StackFrame);\n    }\n}(this, function ErrorStackParser(StackFrame) {\n    'use strict';\n\n    var FIREFOX_SAFARI_STACK_REGEXP = /(^|@)\\S+\\:\\d+/;\n    var CHROME_IE_STACK_REGEXP = /^\\s*at .*(\\S+\\:\\d+|\\(native\\))/m;\n    var SAFARI_NATIVE_CODE_REGEXP = /^(eval@)?(\\[native code\\])?$/;\n\n    function _map(array, fn, thisArg) {\n        if (typeof Array.prototype.map === 'function') {\n            return array.map(fn, thisArg);\n        } else {\n            var output = new Array(array.length);\n            for (var i = 0; i < array.length; i++) {\n                output[i] = fn.call(thisArg, array[i]);\n            }\n            return output;\n        }\n    }\n\n    function _filter(array, fn, thisArg) {\n        if (typeof Array.prototype.filter === 'function') {\n            return array.filter(fn, thisArg);\n        } else {\n            var output = [];\n            for (var i = 0; i < array.length; i++) {\n                if (fn.call(thisArg, array[i])) {\n                    output.push(array[i]);\n                }\n            }\n            return output;\n        }\n    }\n\n    return {\n        /**\n         * Given an Error object, extract the most information from it.\n         * @param error {Error}\n         * @return Array[StackFrame]\n         */\n        parse: function ErrorStackParser$$parse(error) {\n            if (typeof error.stacktrace !== 'undefined' || typeof error['opera#sourceloc'] !== 'undefined') {\n                return this.parseOpera(error);\n            } else if (error.stack && error.stack.match(CHROME_IE_STACK_REGEXP)) {\n                return this.parseV8OrIE(error);\n            } else if (error.stack) {\n                return this.parseFFOrSafari(error);\n            } else {\n                throw new Error('Cannot parse given Error object');\n            }\n        },\n\n        /**\n         * Separate line and column numbers from a URL-like string.\n         * @param urlLike String\n         * @return Array[String]\n         */\n        extractLocation: function ErrorStackParser$$extractLocation(urlLike) {\n            // Fail-fast but return locations like \"(native)\"\n            if (urlLike.indexOf(':') === -1) {\n                return [urlLike];\n            }\n\n            var locationParts = urlLike.replace(/[\\(\\)\\s]/g, '').split(':');\n            var lastNumber = locationParts.pop();\n            var possibleNumber = locationParts[locationParts.length - 1];\n            if (!isNaN(parseFloat(possibleNumber)) && isFinite(possibleNumber)) {\n                var lineNumber = locationParts.pop();\n                return [locationParts.join(':'), lineNumber, lastNumber];\n            } else {\n                return [locationParts.join(':'), lastNumber, undefined];\n            }\n        },\n\n        parseV8OrIE: function ErrorStackParser$$parseV8OrIE(error) {\n            var filtered = _filter(error.stack.split('\\n'), function (line) {\n                return !!line.match(CHROME_IE_STACK_REGEXP);\n            }, this);\n\n            return _map(filtered, function (line) {\n                if (line.indexOf('(eval ') > -1) {\n                    // Throw away eval information until we implement stacktrace.js/stackframe#8\n                    line = line.replace(/eval code/g, 'eval').replace(/(\\(eval at [^\\()]*)|(\\)\\,.*$)/g, '');\n                }\n                var tokens = line.replace(/^\\s+/, '').replace(/\\(eval code/g, '(').split(/\\s+/).slice(1);\n                var locationParts = this.extractLocation(tokens.pop());\n                var functionName = tokens.join(' ') || undefined;\n                var fileName = locationParts[0] === 'eval' ? undefined : locationParts[0];\n\n                return new StackFrame(functionName, undefined, fileName, locationParts[1], locationParts[2], line);\n            }, this);\n        },\n\n        parseFFOrSafari: function ErrorStackParser$$parseFFOrSafari(error) {\n            var filtered = _filter(error.stack.split('\\n'), function (line) {\n                return !line.match(SAFARI_NATIVE_CODE_REGEXP);\n            }, this);\n\n            return _map(filtered, function (line) {\n                // Throw away eval information until we implement stacktrace.js/stackframe#8\n                if (line.indexOf(' > eval') > -1) {\n                    line = line.replace(/ line (\\d+)(?: > eval line \\d+)* > eval\\:\\d+\\:\\d+/g, ':$1');\n                }\n\n                if (line.indexOf('@') === -1 && line.indexOf(':') === -1) {\n                    // Safari eval frames only have function names and nothing else\n                    return new StackFrame(line);\n                } else {\n                    var tokens = line.split('@');\n                    var locationParts = this.extractLocation(tokens.pop());\n                    var functionName = tokens.shift() || undefined;\n                    return new StackFrame(functionName, undefined, locationParts[0], locationParts[1], locationParts[2], line);\n                }\n            }, this);\n        },\n\n        parseOpera: function ErrorStackParser$$parseOpera(e) {\n            if (!e.stacktrace || (e.message.indexOf('\\n') > -1 &&\n                e.message.split('\\n').length > e.stacktrace.split('\\n').length)) {\n                return this.parseOpera9(e);\n            } else if (!e.stack) {\n                return this.parseOpera10(e);\n            } else {\n                return this.parseOpera11(e);\n            }\n        },\n\n        parseOpera9: function ErrorStackParser$$parseOpera9(e) {\n            var lineRE = /Line (\\d+).*script (?:in )?(\\S+)/i;\n            var lines = e.message.split('\\n');\n            var result = [];\n\n            for (var i = 2, len = lines.length; i < len; i += 2) {\n                var match = lineRE.exec(lines[i]);\n                if (match) {\n                    result.push(new StackFrame(undefined, undefined, match[2], match[1], undefined, lines[i]));\n                }\n            }\n\n            return result;\n        },\n\n        parseOpera10: function ErrorStackParser$$parseOpera10(e) {\n            var lineRE = /Line (\\d+).*script (?:in )?(\\S+)(?:: In function (\\S+))?$/i;\n            var lines = e.stacktrace.split('\\n');\n            var result = [];\n\n            for (var i = 0, len = lines.length; i < len; i += 2) {\n                var match = lineRE.exec(lines[i]);\n                if (match) {\n                    result.push(new StackFrame(match[3] || undefined, undefined, match[2], match[1], undefined, lines[i]));\n                }\n            }\n\n            return result;\n        },\n\n        // Opera 10.65+ Error.stack very similar to FF/Safari\n        parseOpera11: function ErrorStackParser$$parseOpera11(error) {\n            var filtered = _filter(error.stack.split('\\n'), function (line) {\n                return !!line.match(FIREFOX_SAFARI_STACK_REGEXP) &&\n                    !line.match(/^Error created at/);\n            }, this);\n\n            return _map(filtered, function (line) {\n                var tokens = line.split('@');\n                var locationParts = this.extractLocation(tokens.pop());\n                var functionCall = (tokens.shift() || '');\n                var functionName = functionCall\n                        .replace(/<anonymous function(: (\\w+))?>/, '$2')\n                        .replace(/\\([^\\)]*\\)/g, '') || undefined;\n                var argsRaw;\n                if (functionCall.match(/\\(([^\\)]*)\\)/)) {\n                    argsRaw = functionCall.replace(/^[^\\(]+\\(([^\\)]*)\\)$/, '$1');\n                }\n                var args = (argsRaw === undefined || argsRaw === '[arguments not available]') ? undefined : argsRaw.split(',');\n                return new StackFrame(functionName, args, locationParts[0], locationParts[1], locationParts[2], line);\n            }, this);\n        }\n    };\n}));\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/error-stack-parser/error-stack-parser.js\n// module id = 5\n// module chunks = 0","(function (root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('stackframe', [], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory();\n    } else {\n        root.StackFrame = factory();\n    }\n}(this, function () {\n    'use strict';\n    function _isNumber(n) {\n        return !isNaN(parseFloat(n)) && isFinite(n);\n    }\n\n    function StackFrame(functionName, args, fileName, lineNumber, columnNumber, source) {\n        if (functionName !== undefined) {\n            this.setFunctionName(functionName);\n        }\n        if (args !== undefined) {\n            this.setArgs(args);\n        }\n        if (fileName !== undefined) {\n            this.setFileName(fileName);\n        }\n        if (lineNumber !== undefined) {\n            this.setLineNumber(lineNumber);\n        }\n        if (columnNumber !== undefined) {\n            this.setColumnNumber(columnNumber);\n        }\n        if (source !== undefined) {\n            this.setSource(source);\n        }\n    }\n\n    StackFrame.prototype = {\n        getFunctionName: function () {\n            return this.functionName;\n        },\n        setFunctionName: function (v) {\n            this.functionName = String(v);\n        },\n\n        getArgs: function () {\n            return this.args;\n        },\n        setArgs: function (v) {\n            if (Object.prototype.toString.call(v) !== '[object Array]') {\n                throw new TypeError('Args must be an Array');\n            }\n            this.args = v;\n        },\n\n        // NOTE: Property name may be misleading as it includes the path,\n        // but it somewhat mirrors V8's JavaScriptStackTraceApi\n        // https://code.google.com/p/v8/wiki/JavaScriptStackTraceApi and Gecko's\n        // http://mxr.mozilla.org/mozilla-central/source/xpcom/base/nsIException.idl#14\n        getFileName: function () {\n            return this.fileName;\n        },\n        setFileName: function (v) {\n            this.fileName = String(v);\n        },\n\n        getLineNumber: function () {\n            return this.lineNumber;\n        },\n        setLineNumber: function (v) {\n            if (!_isNumber(v)) {\n                throw new TypeError('Line Number must be a Number');\n            }\n            this.lineNumber = Number(v);\n        },\n\n        getColumnNumber: function () {\n            return this.columnNumber;\n        },\n        setColumnNumber: function (v) {\n            if (!_isNumber(v)) {\n                throw new TypeError('Column Number must be a Number');\n            }\n            this.columnNumber = Number(v);\n        },\n\n        getSource: function () {\n            return this.source;\n        },\n        setSource: function (v) {\n            this.source = String(v);\n        },\n\n        toString: function() {\n            var functionName = this.getFunctionName() || '{anonymous}';\n            var args = '(' + (this.getArgs() || []).join(',') + ')';\n            var fileName = this.getFileName() ? ('@' + this.getFileName()) : '';\n            var lineNumber = _isNumber(this.getLineNumber()) ? (':' + this.getLineNumber()) : '';\n            var columnNumber = _isNumber(this.getColumnNumber()) ? (':' + this.getColumnNumber()) : '';\n            return functionName + args + fileName + lineNumber + columnNumber;\n        }\n    };\n\n    return StackFrame;\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/error-stack-parser/~/stackframe/stackframe.js\n// module id = 6\n// module chunks = 0","'use strict';\n\nrequire('console-polyfill');\n\nvar parseUriOptions = {\n  strictMode: false,\n    key: [\n    'source',\n    'protocol',\n    'authority',\n    'userInfo',\n    'user',\n    'password',\n    'host',\n    'port',\n    'relative',\n    'path',\n    'directory',\n    'file',\n    'query',\n    'anchor'\n  ],\n    q: {\n    name: 'queryKey',\n      parser: /(?:^|&)([^&=]*)=?([^&]*)/g\n  },\n  parser: {\n    strict: /^(?:([^:\\/?#]+):)?(?:\\/\\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?))?((((?:[^?#\\/]*\\/)*)([^?#]*))(?:\\?([^#]*))?(?:#(.*))?)/,\n      loose: /^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/\n  }\n};\n\n\nfunction typeName(obj) {\n  return ({}).toString.call(obj).match(/\\s([a-zA-Z]+)/)[1].toLowerCase();\n}\n\n\nfunction isType(obj, name) {\n  return typeName(obj) === name;\n}\n\n\nfunction parseUri(str) {\n  if (!isType(str, 'string')) {\n    throw new Error('received invalid input');\n  }\n\n  var o = parseUriOptions;\n  var m = o.parser[o.strictMode ? 'strict' : 'loose'].exec(str);\n  var uri = {};\n  var i = 14;\n\n  while (i--) {\n    uri[o.key[i]] = m[i] || '';\n  }\n\n  uri[o.q.name] = {};\n  uri[o.key[12]].replace(o.q.parser, function ($0, $1, $2) {\n    if ($1) {\n      uri[o.q.name][$1] = $2;\n    }\n  });\n\n  return uri;\n}\n\n\nfunction sanitizeUrl(url) {\n  var baseUrlParts = parseUri(url);\n  // remove a trailing # if there is no anchor\n  if (baseUrlParts.anchor === '') {\n    baseUrlParts.source = baseUrlParts.source.replace('#', '');\n  }\n\n  url = baseUrlParts.source.replace('?' + baseUrlParts.query, '');\n  return url;\n}\n\n\nfunction traverse(obj, func) {\n  var k;\n  var v;\n  var i;\n  var isObj = isType(obj, 'object');\n  var isArray = isType(obj, 'array');\n  var keys = [];\n\n  if (isObj) {\n    for (k in obj) {\n      if (obj.hasOwnProperty(k)) {\n        keys.push(k);\n      }\n    }\n  } else if (isArray) {\n    for (i = 0; i < obj.length; ++i) {\n      keys.push(i);\n    }\n  }\n\n  for (i = 0; i < keys.length; ++i) {\n    k = keys[i];\n    v = obj[k];\n    isObj = isType(v, 'object');\n    isArray = isType(v, 'array');\n    if (isObj || isArray) {\n      obj[k] = traverse(v, func);\n    } else {\n      obj[k] = func(k, v);\n    }\n  }\n\n  return obj;\n}\n\n\nfunction redact(val) {\n  val = String(val);\n  return new Array(val.length + 1).join('*');\n}\n\n\n// from http://stackoverflow.com/a/8809472/1138191\nfunction uuid4() {\n  var d = new Date().getTime();\n  var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n    var r = (d + Math.random() * 16) % 16 | 0;\n    d = Math.floor(d / 16);\n    return (c === 'x' ? r : (r & 0x7 | 0x8)).toString(16);\n  });\n  return uuid;\n}\n\n\nvar Util = {\n  isType: isType,\n  parseUri: parseUri,\n  parseUriOptions: parseUriOptions,\n  redact: redact,\n  sanitizeUrl: sanitizeUrl,\n  traverse: traverse,\n  typeName: typeName,\n  uuid4: uuid4\n};\n\n\nmodule.exports = Util;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/util.js\n// module id = 7\n// module chunks = 0","// Console-polyfill. MIT license.\n// https://github.com/paulmillr/console-polyfill\n// Make it safe to do console.log() always.\n(function(global) {\n  'use strict';\n  global.console = global.console || {};\n  var con = global.console;\n  var prop, method;\n  var empty = {};\n  var dummy = function() {};\n  var properties = 'memory'.split(',');\n  var methods = ('assert,clear,count,debug,dir,dirxml,error,exception,group,' +\n     'groupCollapsed,groupEnd,info,log,markTimeline,profile,profiles,profileEnd,' +\n     'show,table,time,timeEnd,timeline,timelineEnd,timeStamp,trace,warn').split(',');\n  while (prop = properties.pop()) if (!con[prop]) con[prop] = empty;\n  while (method = methods.pop()) if (!con[method]) con[method] = dummy;\n})(typeof window === 'undefined' ? this : window);\n// Using `this` for web workers while maintaining compatibility with browser\n// targeted script loaders such as Browserify or Webpack where the only way to\n// get to the global object is via `window`.\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/console-polyfill/index.js\n// module id = 8\n// module chunks = 0","'use strict';\n\n/* globals ActiveXObject */\n\nvar Util = require('./util');\n\nvar RollbarJSON = null;\n\nfunction setupJSON(JSON) {\n  RollbarJSON = JSON;\n}\n\nfunction ConnectionError(message) {\n  this.name = 'Connection Error';\n  this.message = message;\n  this.stack = (new Error()).stack;\n}\n\nConnectionError.prototype = Object.create(Error.prototype);\nConnectionError.prototype.constructor = ConnectionError;\n\nvar XHR = {\n  XMLHttpFactories: [\n      function () {\n        return new XMLHttpRequest();\n      },\n      function () {\n        return new ActiveXObject('Msxml2.XMLHTTP');\n      },\n      function () {\n        return new ActiveXObject('Msxml3.XMLHTTP');\n      },\n      function () {\n        return new ActiveXObject('Microsoft.XMLHTTP');\n      }\n  ],\n  createXMLHTTPObject: function() {\n    var xmlhttp = false;\n    var factories = XHR.XMLHttpFactories;\n    var i;\n    var numFactories = factories.length;\n    for (i = 0; i < numFactories; i++) {\n      /* eslint-disable no-empty */\n      try {\n        xmlhttp = factories[i]();\n        break;\n      } catch (e) {\n        // pass\n      }\n      /* eslint-enable no-empty */\n    }\n    return xmlhttp;\n  },\n  post: function(url, accessToken, payload, callback) {\n    if (!Util.isType(payload, 'object')) {\n      throw new Error('Expected an object to POST');\n    }\n    payload = RollbarJSON.stringify(payload);\n    callback = callback || function() {};\n    var request = XHR.createXMLHTTPObject();\n    if (request) {\n      try {\n        try {\n          var onreadystatechange = function() {\n            try {\n              if (onreadystatechange && request.readyState === 4) {\n                onreadystatechange = undefined;\n\n                // TODO(cory): have the notifier log an internal error on non-200 response codes\n                var jsonResponse = RollbarJSON.parse(request.responseText);\n                if (request.status === 200) {\n                  callback(null, jsonResponse);\n                } else if (Util.isType(request.status, 'number') &&\n                  request.status >= 400 && request.status < 600) {\n\n                  if (request.status == 403) {\n                    // likely caused by using a server access token, display console message to let\n                    // user know\n                    console.error('[Rollbar]:' + jsonResponse.message);\n                  }\n                  // return valid http status codes\n                  callback(new Error(String(request.status)));\n                } else {\n                  // IE will return a status 12000+ on some sort of connection failure,\n                  // so we return a blank error\n                  // http://msdn.microsoft.com/en-us/library/aa383770%28VS.85%29.aspx\n                  callback(new ConnectionError('XHR response had no status code (likely connection failure)'));\n                }\n              }\n            } catch (ex) {\n              //jquery source mentions firefox may error out while accessing the\n              //request members if there is a network error\n              //https://github.com/jquery/jquery/blob/a938d7b1282fc0e5c52502c225ae8f0cef219f0a/src/ajax/xhr.js#L111\n              var exc;\n              if (ex && ex.stack) {\n                exc = ex;\n              } else {\n                exc = new Error(ex);\n              }\n              callback(exc);\n            }\n          };\n\n          request.open('POST', url, true);\n          if (request.setRequestHeader) {\n            request.setRequestHeader('Content-Type', 'application/json');\n            request.setRequestHeader('X-Rollbar-Access-Token', accessToken);\n          }\n          request.onreadystatechange = onreadystatechange;\n          request.send(payload);\n        } catch (e1) {\n          // Sending using the normal xmlhttprequest object didn't work, try XDomainRequest\n          if (typeof XDomainRequest !== 'undefined') {\n\n            // Assume we are in a really old browser which has a bunch of limitations:\n            // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx\n\n            // If the current page is http, try and send over http\n            if (window.location.href.substring(0, 5) === 'http:' && url.substring(0, 5) === 'https') {\n              url = 'http' + url.substring(5);\n            }\n\n            var ontimeout = function() {\n              callback(new ConnectionError('Request timed out'));\n            };\n\n            var onerror = function() {\n              callback(new Error('Error during request'));\n            };\n\n            var onload = function() {\n              callback(null, RollbarJSON.parse(request.responseText));\n            };\n\n            request = new XDomainRequest();\n            request.onprogress = function() {};\n            request.ontimeout = ontimeout;\n            request.onerror = onerror;\n            request.onload = onload;\n            request.open('POST', url, true);\n            request.send(payload);\n          }\n        }\n      } catch (e2) {\n        callback(e2);\n      }\n    }\n  }\n};\n\nmodule.exports = {\n  XHR: XHR,\n  setupJSON: setupJSON,\n  ConnectionError: ConnectionError\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/xhr.js\n// module id = 9\n// module chunks = 0","/*\n    json2.js\n    2013-05-26\n\n    Public Domain.\n\n    NO WARRANTY EXPRESSED OR IMPLIED. USE AT YOUR OWN RISK.\n\n    See http://www.JSON.org/js.html\n\n\n    This code should be minified before deployment.\n    See http://javascript.crockford.com/jsmin.html\n\n    USE YOUR OWN COPY. IT IS EXTREMELY UNWISE TO LOAD CODE FROM SERVERS YOU DO\n    NOT CONTROL.\n\n\n    This file creates a global JSON object containing two methods: stringify\n    and parse.\n\n        JSON.stringify(value, replacer, space)\n            value       any JavaScript value, usually an object or array.\n\n            replacer    an optional parameter that determines how object\n                        values are stringified for objects. It can be a\n                        function or an array of strings.\n\n            space       an optional parameter that specifies the indentation\n                        of nested structures. If it is omitted, the text will\n                        be packed without extra whitespace. If it is a number,\n                        it will specify the number of spaces to indent at each\n                        level. If it is a string (such as '\\t' or '&nbsp;'),\n                        it contains the characters used to indent at each level.\n\n            This method produces a JSON text from a JavaScript value.\n\n            When an object value is found, if the object contains a toJSON\n            method, its toJSON method will be called and the result will be\n            stringified. A toJSON method does not serialize: it returns the\n            value represented by the name/value pair that should be serialized,\n            or undefined if nothing should be serialized. The toJSON method\n            will be passed the key associated with the value, and this will be\n            bound to the value\n\n            For example, this would serialize Dates as ISO strings.\n\n                Date.prototype.toJSON = function (key) {\n                    function f(n) {\n                        // Format integers to have at least two digits.\n                        return n < 10 ? '0' + n : n;\n                    }\n\n                    return this.getUTCFullYear()   + '-' +\n                         f(this.getUTCMonth() + 1) + '-' +\n                         f(this.getUTCDate())      + 'T' +\n                         f(this.getUTCHours())     + ':' +\n                         f(this.getUTCMinutes())   + ':' +\n                         f(this.getUTCSeconds())   + 'Z';\n                };\n\n            You can provide an optional replacer method. It will be passed the\n            key and value of each member, with this bound to the containing\n            object. The value that is returned from your method will be\n            serialized. If your method returns undefined, then the member will\n            be excluded from the serialization.\n\n            If the replacer parameter is an array of strings, then it will be\n            used to select the members to be serialized. It filters the results\n            such that only members with keys listed in the replacer array are\n            stringified.\n\n            Values that do not have JSON representations, such as undefined or\n            functions, will not be serialized. Such values in objects will be\n            dropped; in arrays they will be replaced with null. You can use\n            a replacer function to replace those with JSON values.\n            JSON.stringify(undefined) returns undefined.\n\n            The optional space parameter produces a stringification of the\n            value that is filled with line breaks and indentation to make it\n            easier to read.\n\n            If the space parameter is a non-empty string, then that string will\n            be used for indentation. If the space parameter is a number, then\n            the indentation will be that many spaces.\n\n            Example:\n\n            text = JSON.stringify(['e', {pluribus: 'unum'}]);\n            // text is '[\"e\",{\"pluribus\":\"unum\"}]'\n\n\n            text = JSON.stringify(['e', {pluribus: 'unum'}], null, '\\t');\n            // text is '[\\n\\t\"e\",\\n\\t{\\n\\t\\t\"pluribus\": \"unum\"\\n\\t}\\n]'\n\n            text = JSON.stringify([new Date()], function (key, value) {\n                return this[key] instanceof Date ?\n                    'Date(' + this[key] + ')' : value;\n            });\n            // text is '[\"Date(---current time---)\"]'\n\n\n        JSON.parse(text, reviver)\n            This method parses a JSON text to produce an object or array.\n            It can throw a SyntaxError exception.\n\n            The optional reviver parameter is a function that can filter and\n            transform the results. It receives each of the keys and values,\n            and its return value is used instead of the original value.\n            If it returns what it received, then the structure is not modified.\n            If it returns undefined then the member is deleted.\n\n            Example:\n\n            // Parse the text. Values that look like ISO date strings will\n            // be converted to Date objects.\n\n            myData = JSON.parse(text, function (key, value) {\n                var a;\n                if (typeof value === 'string') {\n                    a =\n/^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)Z$/.exec(value);\n                    if (a) {\n                        return new Date(Date.UTC(+a[1], +a[2] - 1, +a[3], +a[4],\n                            +a[5], +a[6]));\n                    }\n                }\n                return value;\n            });\n\n            myData = JSON.parse('[\"Date(09/09/2001)\"]', function (key, value) {\n                var d;\n                if (typeof value === 'string' &&\n                        value.slice(0, 5) === 'Date(' &&\n                        value.slice(-1) === ')') {\n                    d = new Date(value.slice(5, -1));\n                    if (d) {\n                        return d;\n                    }\n                }\n                return value;\n            });\n\n\n    This is a reference implementation. You are free to copy, modify, or\n    redistribute.\n*/\n\n/*jslint evil: true, regexp: true */\n\n/*members \"\", \"\\b\", \"\\t\", \"\\n\", \"\\f\", \"\\r\", \"\\\"\", JSON, \"\\\\\", apply,\n    call, charCodeAt, getUTCDate, getUTCFullYear, getUTCHours,\n    getUTCMinutes, getUTCMonth, getUTCSeconds, hasOwnProperty, join,\n    lastIndex, length, parse, prototype, push, replace, slice, stringify,\n    test, toJSON, toString, valueOf\n*/\n\nvar setupCustomJSON = function(JSON) {\n    function f(n) {\n        // Format integers to have at least two digits.\n        return n < 10 ? '0' + n : n;\n    }\n\n    if (typeof Date.prototype.toJSON !== 'function') {\n\n        Date.prototype.toJSON = function () {\n\n            return isFinite(this.valueOf())\n                ? this.getUTCFullYear()     + '-' +\n                    f(this.getUTCMonth() + 1) + '-' +\n                    f(this.getUTCDate())      + 'T' +\n                    f(this.getUTCHours())     + ':' +\n                    f(this.getUTCMinutes())   + ':' +\n                    f(this.getUTCSeconds())   + 'Z'\n                : null;\n        };\n\n        String.prototype.toJSON      =\n            Number.prototype.toJSON  =\n            Boolean.prototype.toJSON = function () {\n                return this.valueOf();\n            };\n    }\n\n    var cx = /[\\u0000\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n        escapable = /[\\\\\\\"\\x00-\\x1f\\x7f-\\x9f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n        gap,\n        indent,\n        meta = {    // table of character substitutions\n            '\\b': '\\\\b',\n            '\\t': '\\\\t',\n            '\\n': '\\\\n',\n            '\\f': '\\\\f',\n            '\\r': '\\\\r',\n            '\"' : '\\\\\"',\n            '\\\\': '\\\\\\\\'\n        },\n        rep;\n\n\n    function quote(string) {\n\n// If the string contains no control characters, no quote characters, and no\n// backslash characters, then we can safely slap some quotes around it.\n// Otherwise we must also replace the offending characters with safe escape\n// sequences.\n\n        escapable.lastIndex = 0;\n        return escapable.test(string) ? '\"' + string.replace(escapable, function (a) {\n            var c = meta[a];\n            return typeof c === 'string'\n                ? c\n                : '\\\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);\n        }) + '\"' : '\"' + string + '\"';\n    }\n\n\n    function str(key, holder) {\n\n// Produce a string from holder[key].\n\n        var i,          // The loop counter.\n            k,          // The member key.\n            v,          // The member value.\n            length,\n            mind = gap,\n            partial,\n            value = holder[key];\n\n// If we were called with a replacer function, then call the replacer to\n// obtain a replacement value.\n\n        if (typeof rep === 'function') {\n            value = rep.call(holder, key, value);\n        }\n\n// What happens next depends on the value's type.\n\n        switch (typeof value) {\n        case 'string':\n            return quote(value);\n\n        case 'number':\n\n// JSON numbers must be finite. Encode non-finite numbers as null.\n\n            return isFinite(value) ? String(value) : 'null';\n\n        case 'boolean':\n        case 'null':\n\n// If the value is a boolean or null, convert it to a string. Note:\n// typeof null does not produce 'null'. The case is included here in\n// the remote chance that this gets fixed someday.\n\n            return String(value);\n\n// If the type is 'object', we might be dealing with an object or an array or\n// null.\n\n        case 'object':\n\n// Due to a specification blunder in ECMAScript, typeof null is 'object',\n// so watch out for that case.\n\n            if (!value) {\n                return 'null';\n            }\n\n// Make an array to hold the partial results of stringifying this object value.\n\n            gap += indent;\n            partial = [];\n\n// Is the value an array?\n\n            if (Object.prototype.toString.apply(value) === '[object Array]') {\n\n// The value is an array. Stringify every element. Use null as a placeholder\n// for non-JSON values.\n\n                length = value.length;\n                for (i = 0; i < length; i += 1) {\n                    partial[i] = str(i, value) || 'null';\n                }\n\n// Join all of the elements together, separated with commas, and wrap them in\n// brackets.\n\n                v = partial.length === 0\n                    ? '[]'\n                    : gap\n                    ? '[\\n' + gap + partial.join(',\\n' + gap) + '\\n' + mind + ']'\n                    : '[' + partial.join(',') + ']';\n                gap = mind;\n                return v;\n            }\n\n// If the replacer is an array, use it to select the members to be stringified.\n\n            if (rep && typeof rep === 'object') {\n                length = rep.length;\n                for (i = 0; i < length; i += 1) {\n                    if (typeof rep[i] === 'string') {\n                        k = rep[i];\n                        v = str(k, value);\n                        if (v) {\n                            partial.push(quote(k) + (gap ? ': ' : ':') + v);\n                        }\n                    }\n                }\n            } else {\n\n// Otherwise, iterate through all of the keys in the object.\n\n                for (k in value) {\n                    if (Object.prototype.hasOwnProperty.call(value, k)) {\n                        v = str(k, value);\n                        if (v) {\n                            partial.push(quote(k) + (gap ? ': ' : ':') + v);\n                        }\n                    }\n                }\n            }\n\n// Join all of the member texts together, separated with commas,\n// and wrap them in braces.\n\n            v = partial.length === 0\n                ? '{}'\n                : gap\n                ? '{\\n' + gap + partial.join(',\\n' + gap) + '\\n' + mind + '}'\n                : '{' + partial.join(',') + '}';\n            gap = mind;\n            return v;\n        }\n    }\n\n// If the JSON object does not yet have a stringify method, give it one.\n\n    if (typeof JSON.stringify !== 'function') {\n        JSON.stringify = function (value, replacer, space) {\n\n// The stringify method takes a value and an optional replacer, and an optional\n// space parameter, and returns a JSON text. The replacer can be a function\n// that can replace values, or an array of strings that will select the keys.\n// A default replacer method can be provided. Use of the space parameter can\n// produce text that is more easily readable.\n\n            var i;\n            gap = '';\n            indent = '';\n\n// If the space parameter is a number, make an indent string containing that\n// many spaces.\n\n            if (typeof space === 'number') {\n                for (i = 0; i < space; i += 1) {\n                    indent += ' ';\n                }\n\n// If the space parameter is a string, it will be used as the indent string.\n\n            } else if (typeof space === 'string') {\n                indent = space;\n            }\n\n// If there is a replacer, it must be a function or an array.\n// Otherwise, throw an error.\n\n            rep = replacer;\n            if (replacer && typeof replacer !== 'function' &&\n                    (typeof replacer !== 'object' ||\n                    typeof replacer.length !== 'number')) {\n                throw new Error('JSON.stringify');\n            }\n\n// Make a fake root object containing our value under the key of ''.\n// Return the result of stringifying the value.\n\n            return str('', {'': value});\n        };\n    }\n\n\n// If the JSON object does not yet have a parse method, give it one.\n\n    if (typeof JSON.parse !== 'function') {\n        JSON.parse = function (text, reviver) {\n\n// The parse method takes a text and an optional reviver function, and returns\n// a JavaScript value if the text is a valid JSON text.\n\n            var j;\n\n            function walk(holder, key) {\n\n// The walk method is used to recursively walk the resulting structure so\n// that modifications can be made.\n\n                var k, v, value = holder[key];\n                if (value && typeof value === 'object') {\n                    for (k in value) {\n                        if (Object.prototype.hasOwnProperty.call(value, k)) {\n                            v = walk(value, k);\n                            if (v !== undefined) {\n                                value[k] = v;\n                            } else {\n                                delete value[k];\n                            }\n                        }\n                    }\n                }\n                return reviver.call(holder, key, value);\n            }\n\n\n// Parsing happens in four stages. In the first stage, we replace certain\n// Unicode characters with escape sequences. JavaScript handles many characters\n// incorrectly, either silently deleting them, or treating them as line endings.\n\n            text = String(text);\n            cx.lastIndex = 0;\n            if (cx.test(text)) {\n                text = text.replace(cx, function (a) {\n                    return '\\\\u' +\n                        ('0000' + a.charCodeAt(0).toString(16)).slice(-4);\n                });\n            }\n\n// In the second stage, we run the text against regular expressions that look\n// for non-JSON patterns. We are especially concerned with '()' and 'new'\n// because they can cause invocation, and '=' because it can cause mutation.\n// But just to be safe, we want to reject all unexpected forms.\n\n// We split the second stage into 4 regexp operations in order to work around\n// crippling inefficiencies in IE's and Safari's regexp engines. First we\n// replace the JSON backslash pairs with '@' (a non-JSON character). Second, we\n// replace all simple value tokens with ']' characters. Third, we delete all\n// open brackets that follow a colon or comma or that begin the text. Finally,\n// we look to see that the remaining characters are only whitespace or ']' or\n// ',' or ':' or '{' or '}'. If that is so, then the text is safe for eval.\n\n            if (/^[\\],:{}\\s]*$/\n                    .test(text.replace(/\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/g, '@')\n                        .replace(/\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g, ']')\n                        .replace(/(?:^|:|,)(?:\\s*\\[)+/g, ''))) {\n\n// In the third stage we use the eval function to compile the text into a\n// JavaScript structure. The '{' operator is subject to a syntactic ambiguity\n// in JavaScript: it can begin a block or an object literal. We wrap the text\n// in parens to eliminate the ambiguity.\n\n                j = eval('(' + text + ')');\n\n// In the optional fourth stage, we recursively walk the new structure, passing\n// each name/value pair to a reviver function for possible transformation.\n\n                return typeof reviver === 'function'\n                    ? walk({'': j}, '')\n                    : j;\n            }\n\n// If the text is not JSON parseable, then a SyntaxError is thrown.\n\n            throw new SyntaxError('JSON.parse');\n        };\n    }\n}\n\nmodule.exports = setupCustomJSON;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./vendor/JSON-js/json2.js\n// module id = 10\n// module chunks = 0"],"sourceRoot":""}